# Control whether statistics are recorded.
# Tags: other
# Type: boolean
statistic.record.enable=true

# The LDAP server host name.
#
# DatabaseOverridable: true
# Tags: other
console.auth.ldap.host=

# The LDAP base DN to search for a user or group.
#
# DatabaseOverridable: true
# Tags: other
console.auth.ldap.baseDN=

# Allow configuration changes to occur on remote non-registration nodes.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
console.auth.config.client=true

# LDAP attribute to search for.
#
# DatabaseOverridable: true
# Tags: other
console.auth.ldap.searchAttribute=

# Map of LDAP groups to console role IDs. Allows LDAP users to
# log in without having a corresponding console user if they are
# a member of one of the specified groups.
#
# DatabaseOverridable: true
# Tags: other
console.auth.ldap.role.group.map=

# The DN of the user to log in as while determining whether a user
# belongs to one of the groups specified by the
# console.auth.ldap.role.group.map parameter. If blank, the
# credentials from the login screen will be used.
#
# DatabaseOverridable: true
# Tags: other
console.auth.ldap.adminDN=

# The password for the user specified by the
# console.auth.ldap.adminDN parameter.
#
# DatabaseOverridable: true
# Tags: other
# Type: encrypted
console.auth.ldap.admin.password=

# Whether or not the LDAP server maintains a "memberOf" attribute.
# This only has an effect if the console.auth.ldap.role.group.map
# parameter is set.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
console.auth.ldap.use.memberOf=true

# The attribute of an LDAP group to check to determine whether or
# not a user is a member of the group. This only has an effect if
# the console.auth.ldap.role.group.map parameter is set and the
# console.auth.ldap.use.memberOf parameter is set to false.
#
# DatabaseOverridable: true
# Tags: other
console.auth.ldap.memberAttribute=member

# Specifies constraints on the name identifier to be used to
# represent the requested subject during SAML authentication.
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.sp.nameid.format=urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Identifier of the SAML IdP entity (must be a URI).
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.idp.entityid=

# SSO endpoint info of the SAML IdP. URL target of the IdP
# where the SP will send the authentication request message.
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.idp.sso.service.url=

# Path to the public x509 certificate of the SAML IdP.
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.idp.cert=

# Name of the organization within the SAML SP's metadata
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.organization.name=

# Display name of the organization within the SAML SP's metadata
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.organization.display.name=

# URL of the organization within the SAML SP's metadata
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.organization.url=

# Language of the organization within the SAML SP's metadata
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.organization.language=

# Map of SAML groups to console role IDs. Allows SAML users to
# log in without having a corresponding console user if they are
# a member of one of the specified groups.
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.role.group.map=

# The attribute of an SAML response to check to determine whether or
# not a user is a member of a SAML group. This only has an effect if
# the console.auth.saml.role.group.map parameter is set.
#
# DatabaseOverridable: true
# Tags: other
console.auth.saml.groupAttribute=group

# Delay in milliseconds between login prompts following a failed login attempt
#
# DatabaseOverridable: true
# Type: integer
# Tags: other
console.auth.fail.delay.ms=5000

# Allow console to authenticate user from a client certificate (X.509)
#
# DatabaseOverridable: true
# Type: boolean
# Tags: other
console.auth.client.cert=false

# Regular expression to find the username from the distinguished name (DN) subject of a client certificate (X.509).
# The first group in parenthesis will be used for the username.
# The default regex will match on the common name (CN) field of the subject.
#
# DatabaseOverridable: true
# Tags: other
console.auth.client.cert.subject.regex=.*CN=(.*?),.*

# Whether to auto commit sql executed in the sql explorer
#
# DatabaseOverridable: true
# Tags: sqlexplorer
# Type: boolean
sql.explorer.auto.commit=true

# Delimiter to use when executing sql
#
# DatabaseOverridable: true
# Tags: sqlexplorer
sql.explorer.delimiter=;

# Show the results of a query in as text
#
# DatabaseOverridable: true
# Tags: sqlexplorer
# Type: boolean
sql.explorer.result.as.text=false

# Max number of rows to pull back as part of a query
#
# DatabaseOverridable: true
# Tags: sqlexplorer
# Type: integer
sql.explorer.max.results=100

# Show the row numbers in a table
#
# DatabaseOverridable: true
# Tags: sqlexplorer
# Type: boolean
sql.explorer.show.row.numbers=true

# Determines if console is available or if a splash screen
# is displayed.  Does not affect synchronization.  Gives user a message about the web console is disabled.
# Requires restart on change.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
console.web.enabled=true

# Filters access by IP address using a regular expression match.
# For example, filter for local addresses is ^(10\.|192\.168|127).*
# Gives user a blank page.  Set to "none" to disable all access.
#
# DatabaseOverridable: true
# Tags: other
console.ip.addr.filter=

# The configured refresh rate of the dashboard screen.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
dashboard.refresh.rate.ms=10000

# Display help text next to entry forms on screens by default.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
console.help.show=true

# Display the explore tab.
#
# DatabaseOverridable: false
# Tags: other
# Type: boolean
console.explore.show=true

# Change the functionality of the registration of a node in the manage tab. The possible values are: wait-accept and pre-auth
#
# DatabaseOverridable: true
# Tags: other
# Type: text
console.registration.method=wait-accept

# Intro text displayed at the top of the login dialog
#
# DatabaseOverridable: true
# Tags: other
login.intro.text=

# Text displayed within a pop-up banner that must be accepted on login
#
# DatabaseOverridable: true
# Tags: other
# Type: textbox
login.confirm.banner=

# Enable previous login information notification
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
previous.login.info.notification.enabled=true

# System identification text shown in top bar in right corner
#
# DatabaseOverridable: true
# Tags: other
topbar.system.text=

# Hide system information such as heartbeat and config information
#
# DatabaseOverridable: true
# Tags: console
# Type: boolean
console.web.hide.system.info=true

# Timeout User Sessions in Minutes
#
# DatabaseOverridable: true
# Tags: console
# Type: integer
console.user.session.timeout=30

# Timeout Administrator Sessions in Minutes
#
# DatabaseOverridable: true
# Tags: console
# Type: integer
console.admin.session.timeout=30

# The maximum number of sessions that can be active at a time per user (0 = unlimited)
#
# DatabaseOverridable: true
# Tags: console
# Type: integer
console.sessions.per.user=1

# The maximum number of sessions that can be active at a time (0 = unlimited)
#
# DatabaseOverridable: true
# Tags: console
# Type: integer
console.sessions.max=20

# Number of consecutive days a user can be logged out before getting disabled (0 = unlimited)
#
# DatabaseOverridable: true
# Tags: console
# Type: integer
console.user.disable.inactive.days=0

# The timezone to use for create_time in the data table, e.g. +00:00.  By default, when this is not set, trigger templates will normally call a now() type function.
#
# DatabaseOverridable: true
# Tags: other
data.create_time.timezone=

# Minimum password length for new passwords (must be greater than 0)
#
# DatabaseOverridable: true
# Tags: password
# Type: integer
console.password.min.length=6

# The minimum number of characters that must be changed when changing a password
#
# DatabaseOverridable: true
# Tags: password
# Type: integer
console.password.min.change.chars=0

# The number of recent passwords to prohibit when creating a new password (0 = no history is kept, -1 = infinite)
#
# DatabaseOverridable: true
# Tags: password
# Type: integer
console.password.prohibit.previous=0

# Prohibit commonly used words in passwords
#
# DatabaseOverridable: true
# Tags: password
# Type: boolean
console.password.prohibit.common.words=true

# Require an alphanumeric password 
#
# DatabaseOverridable: true
# Tags: password
# Type: boolean
console.password.require.alphanum=true

# Require a symbol in password
#
# DatabaseOverridable: true
# Tags: password
# Type: boolean
console.password.require.symbol=true

# Require mixed case in password
#
# DatabaseOverridable: true
# Tags: password
# Type: boolean
console.password.require.mixed.case=true

# Password expiration duration in days (0 = never expire)
#
# DatabaseOverridable: true
# Tags: password
# Type: integer
console.password.expire.days=0

# Number of failed login attempts before user gets disabled (0 = never disabled)
#
# DatabaseOverridable: true
# Tags: password
# Type: integer
console.password.failed.attempts=5

# Password encryption type (SHA-1 or SHA-512)
#
# DatabaseOverridable: true
# Tags: password
console.password.encrypt.method=SHA-512

# Use salt in password encryption
#
# DatabaseOverridable: true
# Tags: password
# Type: boolean
console.password.salt=true

# Required two-factor authentication for login
#
# DatabaseOverridable: true
# Tags: password
# Type: boolean
console.password.otp=false

# Timeout for Verification Codes in Minutes
#
# DatabaseOverridable: true
# Tags: password
# Type: integer
console.password.verificationcode.timeout=15

# Update service
#
# DatabaseOverridable: false
# Tags: misc
# update.service.class=com.jumpmind.symmetric.console.service.impl.ConsoleUpdateService

# Staging Manager
#
# DatabaseOverridable: false
# Tags: misc
# staging.manager.class=com.jumpmind.symmetric.stage.EnhancedStagingManager

# Statistics Manager
#
# DatabaseOverridable: false
# Tags: misc
# statistic.manager.class=com.jumpmind.symmetric.statistic.ThroughputStatisticManager

# A comma-seperated list of custom interceptors which wrap URI handlers.
#
# DatabaseOverridable: true
# Tags: remote status
# server.engine.uri.interceptors=com.jumpmind.symmetric.console.remote.RemoteStatusInterceptor

# Custom http transport manager supporting remote status.
#
# DatabaseOverridable: true
# Tags: remote status
# http.transport.manager.class=com.jumpmind.symmetric.console.remote.RemoteStatusHttpTransportManager

# Enables the use of web sockets to get the remote status of nodes for the web user interface 
#
# DatabaseOverridable: true
# Tags: remote status
# Type: boolean
remote.status.enabled=true

# Max number of threads allowed to be used by Remote Status requests.
#
# DatabaseOverridable: true
# Tags: remote status
# Type: integer
remote.status.max.threads=20

# Send timeout of a remote status web socket connection
#
# DatabaseOverridable: true
# Tags: remote status
# Type: integer
remote.status.send.timeout.ms=60000

# Idle timeout of a remote status web socket connection
#
# DatabaseOverridable: true
# Tags: remote status
# Type: integer
remote.status.idle.timeout.ms=300000

# Amount of time a thread will wait for a remote SymmetricDS node to connect.
#
# DatabaseOverridable: true
# Tags: remote status
# Type: integer
remote.status.connect.timeout.ms=900000

# Determines whether remote status calls will be limited to the group link configuration.  
#
# DatabaseOverridable: true
# Tags: remote status
# Type: boolean
remote.status.follow.group.link.direction=false

# Number of failed connections to remote node before falling back to follow group link direction = true
#
# DatabaseOverridable: true
# Tags: remote status
# Type: integer
remote.status.follow.group.link.fallback.count=10

# The maximum number of batches to display on the batch screens.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
batch.screen.max.to.select=0

# Enable use of batchps command over remote status for outgoing batches screen,
# which uses current list of batches being processed.
# When disabled, it will use batchstatus command with a list of batches to track over remote status.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
batch.screen.use.batchps=true

# The maximum number of characters to display in the data grid in the batch window.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
batch.window.max.data.length=100

# The maximum number of children to display under each node on the node screen before dividing them into smaller groups.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
node.screen.max.children.to.display=100

# The maximum size of a file that can be edited via the staging area screen.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
staging.screen.edit.max.bytes=25000000

# Retrieve meta data for catalog, schema, table per node group
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
console.remote.meta.data=true

# Number of threads to be used for fetching meta data from remote nodes
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
console.remote.meta.data.thread.count=5

# Log miner commit size for saving change data capture rows. 
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
log.miner.flush.commit.size=1000

# Log miner number of changes per transaction that will be stored in memory
# before switching to writing them to disk instead.
# Set to -1 to always use memory.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
log.miner.xid.queue.threshold=100000

# Use incoming batches to collect transaction IDs and their source node IDs.
# When mining changes, it will ignore these transactions to prevent update loops.
# If trigger.sync_on_incoming is enabled, it will mine the change but include the source node ID so routing won't send a batch back to that node.
# Some miners have their own built-in loop prevention and don't need this.
# Supported on the following platforms: PostgreSQL, Oracle, MySql, MariaDB.
#
# DatabaseOverridable: false
# Tags: other
# Type: boolean
log.miner.use.incoming.transactions=true

# For SQL-Server log miner, collect changes from all tables into memory, then
# sort them by change number and foreign keys.  This attempts to preserve
# the order of changes across the database.  When the same row is updated multiple times,
# SQL-Server will merge and return the last change number for it, which prevents
# accurate ordering.  When disabled, the log miner collects and syncs 
# changes from each table ordered by change number, processing each table
# in order by foreign keys.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
log.miner.mssql.sort.in.memory=true

# The maximum number of rows to sort in memory.  When the number of changes
# exceeds the maximum, it will process like the sort in memory parameter is disabled.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
log.miner.mssql.sort.in.memory.max.rows=1000000

# Use a single T-SQL statement that returns which tables have changes waiting.
# The single round trip with SQL-Server can save time. 
# When disabled, a statement is run for each table to check for changes.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
log.miner.mssql.use.tsql.detect.changes=true

# Specifies that the order of the SQL Server log mining output should be ordered by transaction ID.
# If set to false, then the output is ordered by foreign key constraints.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
log.miner.mssql.sort.by.transaction.id=true

# Specifies the name and path for the directory that contains MySQL's binary log files.
# When blank, SymmetricDS will use each log file's path as it appears in MySQL's binary log index file.
#
# DatabaseOverridable: true
# Tags: other
log.miner.mysql.directory=

# Specifies the name and path for MySQL's binary log index file.
# When blank, SymmetricDS will use MySQL's log_bin_index system variable.
#
# DatabaseOverridable: true
# Tags: other
log.miner.mysql.index=

# Specifies the name and path for the directory that contains MariaDB's binary log files.
# When blank, SymmetricDS will use each log file's path as it appears in MariaDB's binary log index file.
#
# DatabaseOverridable: true
# Tags: other
log.miner.mariadb.directory=

# Specifies the name and path for MariaDB's binary log index file.
# When blank, SymmetricDS will use MariaDB's log_bin_index system variable.
#
# DatabaseOverridable: true
# Tags: other
log.miner.mariadb.index=

# Console node connection diagnostic upload bandwidth payloads
#
# DatabaseOverridable: true
# Tags: node connection diagnostic
# Type: text
console.node.connection.diagnostic.upload.bandwidth.payloads=100000,1000000,10000000

# Console node connection diagnostic download bandwidth payloads
#
# DatabaseOverridable: true
# Tags: node connection diagnostic
# Type: text
console.node.connection.diagnostic.download.bandwidth.payloads=100000,1000000,10000000

# Send a shared secret as part of the registration request.
# If the client and server secrets are non-blank and match, the registration is automatically allowed.
#
# DatabaseOverridable: true
# Tags: registration
# Type: encrypted
registration.secret=

# Encrypt the node_password in the sym_node_security table when saving it.
# Decryption is always done on reading if the node_password starts with "enc:" prefix.
#
# DatabaseOverridable: false
# Tags: password
# Type: boolean
node.password.encrypt.enable=true

#  This is the retention time for the number of minutes that a console event will be retained.
#
# DatabaseOverridable: true
# Tags: purge
# Type: integer
console.events.purge.retention.period=43200

# This is the retention time for how long support snapshot files will be retained
#
# DatabaseOverridable: true
# Tags: purge
# Type: integer
purge.snapshot.file.retention.minutes=14400

# This is the retention time for how long a compare request will be retained
#
# DatabaseOverridable: true
# Tags: purge
# Type: integer
purge.compare.request.retention.minutes=14400

# When auto-creating table triggers, some options will be detected and applied for the user,
# including enabling stream LOB for LONG columns and excluded ROWID columns.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
oracle.auto.create.trigger.options=true

# When auto-creating table triggers, some options will be detected and applied for the user,
# such as excluding ROWVERSION columns.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
mssql.auto.create.trigger.options=true

# When auto-creating channels, this option enables removal of reload channels that
# weren't used when rebalancing tables across reload channels
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
auto.create.channels.cleanup=true

# When sync triggers expands a table name to include node external ID, use the first table found
# and clone it for all other nodes to improve performance.
#
# DatabaseOverridable: false
# Tags: other
# Type: boolean
sync.triggers.expand.table.clone=true

# If set assumes all tables replicating with MongoDB will have an _id column which is what MongoDB utilizes.
#
# DatabaseOverridable: true
# Tags: mongodb
# Type: boolean
mongodb.use.mongo.ids=false


# The path to the auditlogs dir for SingleStore
#
# DatabaseOverridable: true
# Tags: single store
# Type: text
single.store.audit.log.dir=/var/lib/memsql/{cluster-id}/auditlogs

# The maximum depth that the Auto Create Table Group Hierarchies dialog will go to when searching for child tables.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
console.auto.create.table.group.hiers.depth.limit=5

# The maximum number of child tables that the Auto Create Table Group Hierarchies dialog will search for.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
console.auto.create.table.group.hiers.table.limit=25

# If set overrides the reload_select of the row in sym_table_reload_request when sending a load via the Load Data Wizard.
# The wizard will prompt the user to input any variables prefixed with a colon (:) that will be replaced in the final SQL.
#
# DatabaseOverridable: true
# Type: text
initial.load.reload.select.override=

# Path to the sqlldr executable for running Oracle SQL*Loader.
# If blank, it will check for ORACLE_HOME environment variable and find sqlldr there.
# Otherwise, it will run "sqlldr" and expect the operating system to find it.
#
# Tags: other
# DatabaseOverridable: false
oracle.bulk.load.sqlldr.cmd=

# Options passed to Oracle SQL*Loader.
#
# Tags: other
# DatabaseOverridable: false
oracle.bulk.load.sqlldr.options=silent=(header,discards) direct=false readsize=4096000 bindsize=4096000 rows=2000 errors=0

# For bulk loading with SQL*Loader, specify how to connect to the database with an ezconnect name.
# If blank, the connection is determined using the db.url parameter. 
#
# Tags: other
# DatabaseOverridable: false
oracle.bulk.load.ezconnect=

# Specify the line terminator used by the Oracler SQL*Loader.  Pick something that does not exist in the
# data in your database. 
#
# DatabaseOverridable: true
# Tags: other, oracle
oracle.bulk.load.line.terminator=|>

# Specify the field terminator used by the Oracler SQL*Loader.  Pick something that does not exist in the
# data in your database. 
#
# DatabaseOverridable: true
# Tags: other, oracle
oracle.bulk.load.field.terminator=|}

# For bulk loading with SQL*Loader, specify input file character set
# when needed to support characters other than US-ASCII characters.
# For example:
# oracle.bulk.load.sqlldr.infile.charset=UTF8 LENGTH SEMANTICS CHAR
# This will generate the following string in the control file after
# the LOAD DATA line:
# CHARACTERSET UTF8 LENGTH SEMANTICS CHAR
# If blank, this line will not show up. 
#
# Tags: other
# DatabaseOverridable: false
oracle.bulk.load.sqlldr.infile.charset=

# Path to the tbloader executable for running Tibero tbLoader.
# If blank, it will check for TB_HOME environment variable and find tbLoader there.
# Otherwise, it will run "tbloader" and expect the operating system to find it.
#
# Tags: other
# DatabaseOverridable: false
tibero.bulk.load.tbloader.cmd=

# Options passed to Tibero tbLoader
#
# Tags: other
# Type: boolean
# DatabaseOverridable: false
tibero.bulk.load.tbloader.options=direct=N dpl_parallel=1 disable_idx=N readsize=2097152 bindsize=2097152 rows=2000 errors=0

# For bulk loading with tbLoader, specify the database name.
# If blank, the database name is determined using the db.url parameter. 
#
# Tags: other
# DatabaseOverridable: false
tibero.bulk.load.dname=

# Specify the line terminator used by the Tibero tbLoader.  Pick something that does not exist in the
# data in your database. 
#
# DatabaseOverridable: true
# Tags: other, tibero
tibero.bulk.load.line.terminator=|>

# Specify the field terminator used by the Tibero tbLoader.  Pick something that does not exist in the
# data in your database. 
#
# DatabaseOverridable: true
# Tags: other, tibero
tibero.bulk.load.field.terminator=|}

# Maximum number of rows to write to file before running with "BULK INSERT" to SQL-Server
#
# DatabaseOverridable: true
# Tags: other, mssql
# Type: integer
mssql.bulk.load.max.rows.before.flush=100000

# Whether or not triggers should be allowed to fire when bulk loading data.
#
# DatabaseOverridable: true
# Tags: other, mssql
# Type: boolean
mssql.bulk.load.fire.triggers=false

# Specify a UNC network path to the tmp\bulkloaddir directory for SQL Server to access bulk load files.
# Use this property with bulk loader when SymmetricDS is on a separate server from SQL Server. 
#
# DatabaseOverridable: true
# Tags: other, mssql
mssql.bulk.load.unc.path=

# Specify the line terminator used by the SQL Server bulk loader.  Pick something that does not exist in the
# data in your database. 
#
# DatabaseOverridable: true
# Tags: other, mssql
mssql.bulk.load.row.terminator=\\r\\n

# Specify the field terminator used by the SQL Server bulk loader.  Pick something that does not exist in the
# data in your database. 
#
# DatabaseOverridable: true
# Tags: other, mssql
mssql.bulk.load.field.terminator=||

# Enables the use of the SQL Server bulk copy program utility (bcp) as the bulk loader.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
mssql.bulk.load.use.bcp=false

# Specifies the path to the SQL Server bulk copy program utility (bcp) executable.
#
# DatabaseOverridable: true
# Tags: other
mssql.bulk.load.bcp.cmd=

# Specifies if the server instance should be used on the SQL Server bulk copy program utility (bcp) executable.
#
# DatabaseOverridable: true
# Tags: other
mssql.bulk.load.bcp.use.instance=true

# Specifies if null values should remain null when using the SQL Server
# bcp bulk loader to load into nullable columns that have default values.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
mssql.bulk.load.bcp.keep.null.values=false

# Specifies if server cert should be trusted when connecting
# bcp bulk loader to SQL Server.
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
mssql.bulk.load.bcp.trust.server.cert=false

# Maximum number of rows to write to file before running with 'LOAD DATA INFILE' to MySQL
#
# DatabaseOverridable: false
# Tags: other
# Type: integer
mysql.bulk.load.max.rows.before.flush=100000

# Maximum number of bytes to write to file before running with 'LOAD DATA INFILE' to MySQL
#
# DatabaseOverridable: false
# Tags: other
# Type: integer
mysql.bulk.load.max.bytes.before.flush=1000000000

# Whether or not files are local to client only, so we must send the file to MySQL to load.  
# If client is running on same server as MySQL, then this can be set to false to have MySQL read file directly.
#
# DatabaseOverridable: false
# Tags: other
# Type: boolean
mysql.bulk.load.local=true

# Whether or not to replace rows that already exist, based on primary key or unique key.
# If set to false, duplicates will be skipped. 
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
mysql.bulk.load.replace=true

# Maximum number of rows to write to file before copying to cloud storage
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, redshift
# Type: integer
cloud.bulk.load.max.rows.before.flush=-1

# Maximum number of bytes to write to file before copying to cloud storage
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, redshift
# Type: integer
cloud.bulk.load.max.bytes.before.flush=-1

# The S3 bucket where bulk load files will be uploaded
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, redshift
cloud.bulk.load.s3.bucket=

# The AWS access key ID (aws_access_key_id) to use as credentials for uploading to S3
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, redshift
cloud.bulk.load.s3.access.key=

# The AWS secret access key (aws_secret_access_key) to use as credentials for uploading to S3
#
# DatabaseOverridable: true
# Type: encrypted
# Tags: cloud, snowflake, redshift
cloud.bulk.load.s3.secret.key=

# The endpoint for the s3 bucket.  If not set it will use the default endpoint.
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, redshift
cloud.bulk.load.s3.endpoint=

# The AWS S3 region
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.load.s3.region=us-east-1

# The Azure storage account name
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.load.azure.account.name=

# The Azure storage account key
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.load.azure.account.key=

# The Azure storage account blob container name
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.load.azure.blob.container=symmetricds

# The Azure storage account SAS Token (Shared Access Signature)
#
# DatabaseOverridable: true
# Type: encrypted
# Tags: cloud, snowflake, azure
cloud.bulk.load.azure.sas.token=

# The cloud based terminator used in bulk loading to be used for a new row
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.row.terminator=\r\n

# The cloud based character used in bulk loading to be used when quoting fields
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.field.quote=�

# The cloud based terminator used in bulk loading to separate each field
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.field.terminator=|

# The cloud based codepage to use for bulk insert if supported by vendor and version
#
# DatabaseOverridable: true
# Tags: cloud, snowflake, azure
cloud.bulk.codepage= 

# Azure Blob Storage Account Name for file sync
#
# DatabaseOverridable: true
# Tags: azure, cloud
file.sync.azure.account.name=

# Azure Blob Storage SAS token for file sync
#
# DatabaseOverridable: true
# Type: encrypted
file.sync.azure.sas.token=

# S3 Access Key for Bucket Storage
#
# DatabaseOverridable: true
# Type: encrypted
file.sync.s3.account.key=

# S3 Secret Key for Bucket Storage
#
# DatabaseOverridable: true
# Type: encrypted
file.sync.s3.secret.key=

# S3 Region for Bucket Storage
#
# DatabaseOverridable: true
file.sync.s3.region=

# Maximum number of rows to write to file before copying to S3 and running with COPY statement
#
# DatabaseOverridable: true
# Tags: redshift
# Type: integer
redshift.bulk.load.max.rows.before.flush=100000

# Maximum number of bytes to write to file before copying to S3 and running with COPY statement
#
# DatabaseOverridable: true
# Tags: redshift
# Type: integer
redshift.bulk.load.max.bytes.before.flush=1000000000

# The S3 bucket where bulk load files will be uploaded to before bulk loading into Redshift
#
# DatabaseOverridable: true
# Tags: redshift
redshift.bulk.load.s3.bucket=

# The endpoint for the s3 bucket.  If not set it will use the default endpoint.
#
# DatabaseOverridable: true
# Tags: redshift
redshift.bulk.load.s3.endpoint=

# The AWS access key ID (aws_access_key_id) to use as credentials for uploading to S3
#
# DatabaseOverridable: true
# Tags: redshift
redshift.bulk.load.s3.access.key=

# The AWS secret access key (aws_secret_access_key) to use as credentials for uploading to S3
#
# DatabaseOverridable: true
# Type: encrypted
# Tags: redshift
redshift.bulk.load.s3.secret.key=

# The value of this property will be appended to the end of the copy command when the redshift
# data loader is enabled.
#
# DatabaseOverridable: true
# Tags: redshift
redshift.append.to.copy.command=

# The library that contains the journal for log based capture on the AS400
#
# DatabaseOverridable: true
# Tags: as400
# Type: text
as400.journal.library=SYM

# The journal that will be used for log based capture on the AS400
#
# DatabaseOverridable: true
# Tags: as400
# Type: text
as400.journal.name=QSQJRN

# DatabaseOverridable: true
# Tags: jobs
# Type: integer
job.monitor.period.time.ms=60000

# Whether the monitor job is started.
#
# Tags: jobs
# Type: boolean
start.monitor.job=true

# This is the amount of time monitor entries will be cached before re-reading them from the database.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
cache.monitor.time.ms=60000

# This is the amount of time notification entries will be cached before re-reading them from the database.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
cache.notification.time.ms=60000

# Enable capturing of monitor events and syncing to other nodes.
# When disabled, monitor events are still generated, just not synced to other nodes.
#
# DatabaseOverridable: true
# Tags: trigger
# Type: boolean
monitor.events.capture.enabled=true

# Setting that defines when a Node should be considered "offline."
# The offlineNodes, batchUnsent, and batchUnsentOffline monitors use this setting.
#
# DatabaseOverridable: true
# Tags: other
# Type: integer
console.report.as.offline.minutes=1440

# The hostname of the mail server
#
# DatabaseOverridable: true
# Tags: smtp
smtp.host=localhost

# The transport type to use when connecting to mail server, either smtp or smtps.
#
# DatabaseOverridable: true
# Tags: smtp
smtp.transport=smtp

# The port number of the mail server 
#
# DatabaseOverridable: true
# Tags: smtp
# Type: integer
smtp.port=25

# The email address to use in the "from" header when sending email.
#
# DatabaseOverridable: true
# Tags: smtp
smtp.from=symmetricds@localhost

# Whether or not to authenticate with the mail server.
#
# DatabaseOverridable: true
# Type: boolean
# Tags: smtp
smtp.auth=false

# When authenticating with the mail server, the username to use.
#
# DatabaseOverridable: true
# Tags: smtp
smtp.user=

# When authenticating with the mail server, the password to use. 
#
# DatabaseOverridable: true
# Type: encrypted
# Tags: smtp
smtp.password=

# Whether or not to use TLS after connecting to the mail server. 
#
# DatabaseOverridable: true
# Type: boolean
# Tags: smtp
smtp.starttls=false

# Whether or not to accept an untrusted certificate for SSL/TLS when connecting to the mail server.
#
# DatabaseOverridable: true
# Type: boolean
# Tags: smtp
smtp.allow.untrusted.cert=false

# DatabaseOverridable: true
# Tags: jobs
# Type: integer
job.data.refresh.cron=0 0 0 * * *

# Whether the data refresh job is started.
#
# Tags: jobs
# Type: boolean
start.data.refresh.job=false

# Whether or not to set create first flag on reload requests from the data refresh job.
# See also initial.load.defer.create.constraints which defaults to true.
# If setting both this and initial.load.defer.create.constraints to true, the reload request
# will remove constraints before loading the data, and add back the constraints afterwards.
# 
# DatabaseOverridable: true
# Tags: load
# Type: boolean
data.refresh.create.first=false

# DatabaseOverridable: true
# Tags: jobs
# Type: integer
job.compare.period.time.ms=10000

# The amount of time a single compare worker node_communication lock will timeout after.
#
# DatabaseOverridable: true
# Tags: jobs
# Type: integer
compare.lock.timeout.ms=7200000

# Whether the compare job is started.
#
# Tags: jobs
# Type: boolean
start.compare.job=true

# The number of threads created that will be used to compare data concurrently on one node in the cluster.
#
# DatabaseOverridable: true
# Tags: jobs
# Type: integer
compare.thread.per.server.count=10

# Number of threads to use for each compare request.  See also compare.thread.per.server.count for overall thread pool. 
#
# DatabaseOverridable: true
#
# Tags: compare
# Type: integer
compare.queue.per.request.count=4

# Maximum number of outstanding changes for a table that is allowed for comparison.
# When the maximum is exceeded, the table request will be ignored.
#
# DatabaseOverridable: true
#
# Tags: compare
# Type: integer
compare.max.inflight.count=10000

# If true, the job will continue running as long as uncompleted requests exist.
# See compare.immediate.time.ms for the delay between checking and executing requests.
#
# DatabaseOverridable: true
#
# Tags: compare
# Type: boolean
compare.immediate.if.request.found=true

# The delay between querying for uncompleted requests when compare.immediate.if.request.found is true.
#
# DatabaseOverridable: true
#
# Tags: compare
# Type: integer
compare.immediate.time.ms=2000

# If true, the repair script will be batch CSV and use the default data loader.
# The data loader is tolerant of different case for catalog, schema, and table name.
# If false, the repair script will be SQL with unquoted table names that is run on the database.
#
# DatabaseOverridable: true
#
# Tags: compare
# Type: boolean
compare.repair.batch.csv=true

# How long in milliseconds to cache license key.  Useful for re-reading license key that was just installed to a cluster.
#
# DatabaseOverridable: true
#
# Type: integer
license.cache.time.ms=60000

# The file format in which S3 output will be written
#
# Tags: s3
s3.load.format=csv

# Enables time based capture miner when the log miner job is running to select changes out of tables based on a date time column or numeric primary key
#
# DatabaseOverridable: true
# Tags: other
# Type: boolean
time.based.capture=false

# The number of milliseconds before logging that the refresh of a screen is slow.
#
# DatabaseOverridable: true
# Type: integer
# Tags: console
console.log.slow.refresh.threshold.millis=5000

# Enables the REST API
#
# DatabaseOverridable: true
# Tags: general
# Type: boolean
rest.api.enable=false

# Enables the REST API to update the heartbeat when pulling data
#
# DatabaseOverridable: true
# Tags: general
# Type: boolean
rest.api.heartbeat.on.pull=false
